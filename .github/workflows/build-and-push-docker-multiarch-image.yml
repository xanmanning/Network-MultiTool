---

name: Container Image Build and Push - CI Workflow

'on':
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

env:
  DOCKER_IMAGE: network-multitool
  DOCKERHUB_ORGNAME: xanmanning
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}

jobs:
  scan:
    name: trivy scan
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.variables.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build container image
        run: |
          docker build -t localhost/${{ env.DOCKER_IMAGE }}:${{ github.sha }} .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: localhost/${{ env.DOCKER_IMAGE }}:${{ github.sha }}
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

  build-and-push-multi-arch-container-image:
    name: build and push multi-arch container image
    runs-on: ubuntu-latest
    if: github.ref_name == 'main'
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Prepare Container Image Tags
        id: prep
        run: |
          SHORT_REF=$(basename ${GITHUB_REF})
          SHORT_HASH=${GITHUB_SHA::7}
          TAGS=""
          if [[ ! -z "${SHORT_REF}" && "${SHORT_REF}" == "master" ]]; then
            echo "Found git commit on master branch. Setting docker image tag as: 'latest'"
            TAG=${DOCKERHUB_ORGNAME}/${DOCKER_IMAGE}:latest
          fi
          if [[ ! -z "${SHORT_REF}" && "${SHORT_REF}" != "master" ]]; then
            echo "Setting docker image tag as: '${SHORT_REF}'"
            TAG=${DOCKERHUB_ORGNAME}/${DOCKER_IMAGE}:${SHORT_REF}
          fi
          TAGS="${TAG},${DOCKERHUB_ORGNAME}/${DOCKER_IMAGE}:${SHORT_HASH}"
          echo "Complete Docker image-name and tags are setup as: ${TAGS}"
          echo ::set-output name=tags::${TAGS}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v1
        if: github.ref_name == 'main'
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/386,linux/amd64,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x
          push: true
          tags: ${{ steps.prep.outputs.tags }}
